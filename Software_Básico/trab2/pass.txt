
./pass:     formato de ficheiro elf64-x86-64


Desmontagem da secção .init:

0000000000001000 <_init>:
    1000:	f3 0f 1e fa          	endbr64
    1004:	48 83 ec 08          	sub    $0x8,%rsp
    1008:	48 8b 05 c1 2f 00 00 	mov    0x2fc1(%rip),%rax        # 3fd0 <__gmon_start__@Base>
    100f:	48 85 c0             	test   %rax,%rax
    1012:	74 02                	je     1016 <_init+0x16>
    1014:	ff d0                	call   *%rax
    1016:	48 83 c4 08          	add    $0x8,%rsp
    101a:	c3                   	ret

Desmontagem da secção .plt:

0000000000001020 <puts@plt-0x10>:
    1020:	ff 35 ca 2f 00 00    	push   0x2fca(%rip)        # 3ff0 <_GLOBAL_OFFSET_TABLE_+0x8>
    1026:	ff 25 cc 2f 00 00    	jmp    *0x2fcc(%rip)        # 3ff8 <_GLOBAL_OFFSET_TABLE_+0x10>
    102c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000001030 <puts@plt>:
    1030:	ff 25 ca 2f 00 00    	jmp    *0x2fca(%rip)        # 4000 <puts@GLIBC_2.2.5>
    1036:	68 00 00 00 00       	push   $0x0
    103b:	e9 e0 ff ff ff       	jmp    1020 <_init+0x20>

0000000000001040 <printf@plt>:
    1040:	ff 25 c2 2f 00 00    	jmp    *0x2fc2(%rip)        # 4008 <printf@GLIBC_2.2.5>
    1046:	68 01 00 00 00       	push   $0x1
    104b:	e9 d0 ff ff ff       	jmp    1020 <_init+0x20>

0000000000001050 <read@plt>:
    1050:	ff 25 ba 2f 00 00    	jmp    *0x2fba(%rip)        # 4010 <read@GLIBC_2.2.5>
    1056:	68 02 00 00 00       	push   $0x2
    105b:	e9 c0 ff ff ff       	jmp    1020 <_init+0x20>

0000000000001060 <fflush@plt>:
    1060:	ff 25 b2 2f 00 00    	jmp    *0x2fb2(%rip)        # 4018 <fflush@GLIBC_2.2.5>
    1066:	68 03 00 00 00       	push   $0x3
    106b:	e9 b0 ff ff ff       	jmp    1020 <_init+0x20>

Desmontagem da secção .text:

0000000000001070 <_start>:
    1070:	f3 0f 1e fa          	endbr64
    1074:	31 ed                	xor    %ebp,%ebp
    1076:	49 89 d1             	mov    %rdx,%r9
    1079:	5e                   	pop    %rsi
    107a:	48 89 e2             	mov    %rsp,%rdx
    107d:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
    1081:	50                   	push   %rax
    1082:	54                   	push   %rsp
    1083:	45 31 c0             	xor    %r8d,%r8d
    1086:	31 c9                	xor    %ecx,%ecx
    1088:	48 8d 3d 2e 02 00 00 	lea    0x22e(%rip),%rdi        # 12bd <main>
    108f:	ff 15 2b 2f 00 00    	call   *0x2f2b(%rip)        # 3fc0 <__libc_start_main@GLIBC_2.34>
    1095:	f4                   	hlt
    1096:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    109d:	00 00 00 
    10a0:	48 8d 3d 89 2f 00 00 	lea    0x2f89(%rip),%rdi        # 4030 <__TMC_END__>
    10a7:	48 8d 05 82 2f 00 00 	lea    0x2f82(%rip),%rax        # 4030 <__TMC_END__>
    10ae:	48 39 f8             	cmp    %rdi,%rax
    10b1:	74 15                	je     10c8 <_start+0x58>
    10b3:	48 8b 05 0e 2f 00 00 	mov    0x2f0e(%rip),%rax        # 3fc8 <_ITM_deregisterTMCloneTable@Base>
    10ba:	48 85 c0             	test   %rax,%rax
    10bd:	74 09                	je     10c8 <_start+0x58>
    10bf:	ff e0                	jmp    *%rax
    10c1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    10c8:	c3                   	ret
    10c9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    10d0:	48 8d 3d 59 2f 00 00 	lea    0x2f59(%rip),%rdi        # 4030 <__TMC_END__>
    10d7:	48 8d 35 52 2f 00 00 	lea    0x2f52(%rip),%rsi        # 4030 <__TMC_END__>
    10de:	48 29 fe             	sub    %rdi,%rsi
    10e1:	48 89 f0             	mov    %rsi,%rax
    10e4:	48 c1 ee 3f          	shr    $0x3f,%rsi
    10e8:	48 c1 f8 03          	sar    $0x3,%rax
    10ec:	48 01 c6             	add    %rax,%rsi
    10ef:	48 d1 fe             	sar    $1,%rsi
    10f2:	74 14                	je     1108 <_start+0x98>
    10f4:	48 8b 05 dd 2e 00 00 	mov    0x2edd(%rip),%rax        # 3fd8 <_ITM_registerTMCloneTable@Base>
    10fb:	48 85 c0             	test   %rax,%rax
    10fe:	74 08                	je     1108 <_start+0x98>
    1100:	ff e0                	jmp    *%rax
    1102:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    1108:	c3                   	ret
    1109:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    1110:	f3 0f 1e fa          	endbr64
    1114:	80 3d 15 2f 00 00 00 	cmpb   $0x0,0x2f15(%rip)        # 4030 <__TMC_END__>
    111b:	75 33                	jne    1150 <_start+0xe0>
    111d:	55                   	push   %rbp
    111e:	48 83 3d ba 2e 00 00 	cmpq   $0x0,0x2eba(%rip)        # 3fe0 <__cxa_finalize@GLIBC_2.2.5>
    1125:	00 
    1126:	48 89 e5             	mov    %rsp,%rbp
    1129:	74 0d                	je     1138 <_start+0xc8>
    112b:	48 8b 3d f6 2e 00 00 	mov    0x2ef6(%rip),%rdi        # 4028 <__dso_handle>
    1132:	ff 15 a8 2e 00 00    	call   *0x2ea8(%rip)        # 3fe0 <__cxa_finalize@GLIBC_2.2.5>
    1138:	e8 63 ff ff ff       	call   10a0 <_start+0x30>
    113d:	c6 05 ec 2e 00 00 01 	movb   $0x1,0x2eec(%rip)        # 4030 <__TMC_END__>
    1144:	5d                   	pop    %rbp
    1145:	c3                   	ret
    1146:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    114d:	00 00 00 
    1150:	c3                   	ret
    1151:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
    1158:	00 00 00 00 
    115c:	0f 1f 40 00          	nopl   0x0(%rax)
    1160:	f3 0f 1e fa          	endbr64
    1164:	e9 67 ff ff ff       	jmp    10d0 <_start+0x60>

0000000000001169 <dec>:
    1169:	55                   	push   %rbp
    116a:	48 89 e5             	mov    %rsp,%rbp
    116d:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    1174:	eb 2c                	jmp    11a2 <dec+0x39>
    1176:	8b 45 fc             	mov    -0x4(%rbp),%eax
    1179:	48 98                	cltq
    117b:	48 8d 15 c6 2e 00 00 	lea    0x2ec6(%rip),%rdx        # 4048 <input0>
    1182:	0f b6 04 10          	movzbl (%rax,%rdx,1),%eax
    1186:	89 c2                	mov    %eax,%edx
    1188:	8b 45 d8             	mov    -0x28(%rbp),%eax
    118b:	01 d0                	add    %edx,%eax
    118d:	89 c1                	mov    %eax,%ecx
    118f:	8b 45 fc             	mov    -0x4(%rbp),%eax
    1192:	48 98                	cltq
    1194:	48 8d 15 ad 2e 00 00 	lea    0x2ead(%rip),%rdx        # 4048 <input0>
    119b:	88 0c 10             	mov    %cl,(%rax,%rdx,1)
    119e:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    11a2:	83 7d fc 0a          	cmpl   $0xa,-0x4(%rbp)
    11a6:	7e ce                	jle    1176 <dec+0xd>
    11a8:	90                   	nop
    11a9:	90                   	nop
    11aa:	5d                   	pop    %rbp
    11ab:	c3                   	ret

00000000000011ac <sub>:
    11ac:	55                   	push   %rbp
    11ad:	48 89 e5             	mov    %rsp,%rbp
    11b0:	0f b6 05 81 2e 00 00 	movzbl 0x2e81(%rip),%eax        # 4038 <input1>
    11b7:	83 c0 14             	add    $0x14,%eax
    11ba:	88 05 78 2e 00 00    	mov    %al,0x2e78(%rip)        # 4038 <input1>
    11c0:	0f b6 05 72 2e 00 00 	movzbl 0x2e72(%rip),%eax        # 4039 <input1+0x1>
    11c7:	83 c0 16             	add    $0x16,%eax
    11ca:	88 05 69 2e 00 00    	mov    %al,0x2e69(%rip)        # 4039 <input1+0x1>
    11d0:	0f b6 05 63 2e 00 00 	movzbl 0x2e63(%rip),%eax        # 403a <input1+0x2>
    11d7:	83 c0 0e             	add    $0xe,%eax
    11da:	88 05 5a 2e 00 00    	mov    %al,0x2e5a(%rip)        # 403a <input1+0x2>
    11e0:	0f b6 05 54 2e 00 00 	movzbl 0x2e54(%rip),%eax        # 403b <input1+0x3>
    11e7:	83 c0 02             	add    $0x2,%eax
    11ea:	88 05 4b 2e 00 00    	mov    %al,0x2e4b(%rip)        # 403b <input1+0x3>
    11f0:	0f b6 05 45 2e 00 00 	movzbl 0x2e45(%rip),%eax        # 403c <input1+0x4>
    11f7:	83 c0 09             	add    $0x9,%eax
    11fa:	88 05 3c 2e 00 00    	mov    %al,0x2e3c(%rip)        # 403c <input1+0x4>
    1200:	0f b6 05 36 2e 00 00 	movzbl 0x2e36(%rip),%eax        # 403d <input1+0x5>
    1207:	83 c0 08             	add    $0x8,%eax
    120a:	88 05 2d 2e 00 00    	mov    %al,0x2e2d(%rip)        # 403d <input1+0x5>
    1210:	0f b6 05 28 2e 00 00 	movzbl 0x2e28(%rip),%eax        # 403f <input1+0x7>
    1217:	83 c0 16             	add    $0x16,%eax
    121a:	88 05 1f 2e 00 00    	mov    %al,0x2e1f(%rip)        # 403f <input1+0x7>
    1220:	0f b6 05 17 2e 00 00 	movzbl 0x2e17(%rip),%eax        # 403e <input1+0x6>
    1227:	83 c0 15             	add    $0x15,%eax
    122a:	88 05 0e 2e 00 00    	mov    %al,0x2e0e(%rip)        # 403e <input1+0x6>
    1230:	0f b6 05 09 2e 00 00 	movzbl 0x2e09(%rip),%eax        # 4040 <input1+0x8>
    1237:	83 c0 0e             	add    $0xe,%eax
    123a:	88 05 00 2e 00 00    	mov    %al,0x2e00(%rip)        # 4040 <input1+0x8>
    1240:	0f b6 05 fa 2d 00 00 	movzbl 0x2dfa(%rip),%eax        # 4041 <input1+0x9>
    1247:	83 c0 03             	add    $0x3,%eax
    124a:	88 05 f1 2d 00 00    	mov    %al,0x2df1(%rip)        # 4041 <input1+0x9>
    1250:	0f b6 05 eb 2d 00 00 	movzbl 0x2deb(%rip),%eax        # 4042 <input1+0xa>
    1257:	83 c0 38             	add    $0x38,%eax
    125a:	88 05 e2 2d 00 00    	mov    %al,0x2de2(%rip)        # 4042 <input1+0xa>
    1260:	90                   	nop
    1261:	5d                   	pop    %rbp
    1262:	c3                   	ret

0000000000001263 <check>:
    1263:	55                   	push   %rbp
    1264:	48 89 e5             	mov    %rsp,%rbp
    1267:	89 7d ec             	mov    %edi,-0x14(%rbp)
    126a:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    1271:	eb 23                	jmp    1296 <check+0x33>
    1273:	8b 45 fc             	mov    -0x4(%rbp),%eax
    1276:	48 98                	cltq
    1278:	48 8d 15 b9 2d 00 00 	lea    0x2db9(%rip),%rdx        # 4038 <input1>
    127f:	0f b6 04 10          	movzbl (%rax,%rdx,1),%eax
    1283:	0f be c0             	movsbl %al,%eax
    1286:	39 45 ec             	cmp    %eax,-0x14(%rbp)
    1289:	74 07                	je     1292 <check+0x2f>
    128b:	b8 00 00 00 00       	mov    $0x0,%eax
    1290:	eb 0f                	jmp    12a1 <check+0x3e>
    1292:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    1296:	83 7d fc 0a          	cmpl   $0xa,-0x4(%rbp)
    129a:	7e d7                	jle    1273 <check+0x10>
    129c:	b8 01 00 00 00       	mov    $0x1,%eax
    12a1:	5d                   	pop    %rbp
    12a2:	c3                   	ret

00000000000012a3 <validate>:
    12a3:	55                   	push   %rbp
    12a4:	48 89 e5             	mov    %rsp,%rbp
    12a7:	e8 bd fe ff ff       	call   1169 <dec>
    12ac:	e8 fb fe ff ff       	call   11ac <sub>
    12b1:	bf 77 00 00 00       	mov    $0x77,%edi
    12b6:	e8 a8 ff ff ff       	call   1263 <check>
    12bb:	5d                   	pop    %rbp
    12bc:	c3                   	ret

00000000000012bd <main>:
    12bd:	55                   	push   %rbp
    12be:	48 89 e5             	mov    %rsp,%rbp
    12c1:	48 8d 05 3c 0d 00 00 	lea    0xd3c(%rip),%rax        # 2004 <_IO_stdin_used+0x4>
    12c8:	48 89 c7             	mov    %rax,%rdi
    12cb:	b8 00 00 00 00       	mov    $0x0,%eax
    12d0:	e8 6b fd ff ff       	call   1040 <printf@plt>
    12d5:	bf 00 00 00 00       	mov    $0x0,%edi
    12da:	e8 81 fd ff ff       	call   1060 <fflush@plt>
    12df:	48 8d 05 52 2d 00 00 	lea    0x2d52(%rip),%rax        # 4038 <input1>
    12e6:	ba 0b 00 00 00       	mov    $0xb,%edx
    12eb:	48 89 c6             	mov    %rax,%rsi
    12ee:	bf 00 00 00 00       	mov    $0x0,%edi
    12f3:	e8 58 fd ff ff       	call   1050 <read@plt>
    12f8:	e8 a6 ff ff ff       	call   12a3 <validate>
    12fd:	85 c0                	test   %eax,%eax
    12ff:	74 11                	je     1312 <main+0x55>
    1301:	48 8d 05 07 0d 00 00 	lea    0xd07(%rip),%rax        # 200f <_IO_stdin_used+0xf>
    1308:	48 89 c7             	mov    %rax,%rdi
    130b:	e8 20 fd ff ff       	call   1030 <puts@plt>
    1310:	eb 0f                	jmp    1321 <main+0x64>
    1312:	48 8d 05 05 0d 00 00 	lea    0xd05(%rip),%rax        # 201e <_IO_stdin_used+0x1e>
    1319:	48 89 c7             	mov    %rax,%rdi
    131c:	e8 0f fd ff ff       	call   1030 <puts@plt>
    1321:	b8 00 00 00 00       	mov    $0x0,%eax
    1326:	5d                   	pop    %rbp
    1327:	c3                   	ret

Desmontagem da secção .fini:

0000000000001328 <_fini>:
    1328:	f3 0f 1e fa          	endbr64
    132c:	48 83 ec 08          	sub    $0x8,%rsp
    1330:	48 83 c4 08          	add    $0x8,%rsp
    1334:	c3                   	ret
